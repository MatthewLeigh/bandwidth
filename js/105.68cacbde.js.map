{"version":3,"file":"js/105.68cacbde.js","mappings":"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","sources":["webpack://bandwidth-v3/../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx","webpack://bandwidth-v3/../../../src/components/VSelectionControl/VSelectionControl.tsx","webpack://bandwidth-v3/../../../src/components/VCheckbox/VCheckboxBtn.tsx","webpack://bandwidth-v3/../../../src/components/VMenu/VMenu.tsx","webpack://bandwidth-v3/../../../src/components/VSelect/VSelect.tsx","webpack://bandwidth-v3/../../../src/components/VSelect/useScrolling.ts","webpack://bandwidth-v3/../../../src/components/VVirtualScroll/VVirtualScrollItem.tsx","webpack://bandwidth-v3/../../src/composables/virtual.ts","webpack://bandwidth-v3/../../../src/components/VVirtualScroll/VVirtualScroll.tsx","webpack://bandwidth-v3/../../../src/components/transitions/dialog-transition.tsx"],"sourcesContent":["// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue'\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\nimport type { GenericProps } from '@/util'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps(),\n}, 'SelectionControlGroup')\n\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl',\n  }),\n}, 'VSelectionControlGroup')\n\nexport const VSelectionControlGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: { default: never },\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControlGroup',\n\n  props: makeVSelectionControlGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n          props.class,\n        ]}\n        style={ props.style }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n","// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject, nextTick, ref, shallowRef } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  matchesSelector,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, VNode, WritableComputedRef } from 'vue'\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp, GenericProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n  inputNode: VNode\n  icon: IconValue | undefined\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = {\n  default: {\n    backgroundColorClasses: Ref<string[]>\n    backgroundColorStyles: Ref<CSSProperties>\n  }\n  label: { label: string | undefined, props: Record<string, unknown> }\n  input: SelectionControlSlot\n}\n\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps(),\n}, 'VSelectionControl')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeVSelectionControlProps>> & {\n    'onUpdate:modelValue': EventProp | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? wrapInArray(val).some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    if (props.error || props.disabled) return undefined\n\n    return model.value ? props.color : props.baseColor\n  }))\n  const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : props.baseColor\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeVSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const isFocused = shallowRef(false)\n    const isFocusVisible = shallowRef(false)\n    const input = ref<HTMLInputElement>()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isInteractive = computed(() => !props.disabled && !props.readonly)\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      if (!isInteractive.value) return\n\n      isFocused.value = true\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') !== false) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onClickLabel (e: Event) {\n      e.stopPropagation()\n    }\n\n    function onInput (e: Event) {\n      if (!isInteractive.value) {\n        if (input.value) {\n          // model value is not updated when input is not interactive\n          // but the internal checked state of the input is still updated,\n          // so here it's value is restored\n          input.value.checked = model.value\n        }\n\n        return\n      }\n\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      const inputNode = (\n        <input\n          ref={ input }\n          checked={ model.value }\n          disabled={ !!props.disabled }\n          id={ id.value }\n          onBlur={ onBlur }\n          onFocus={ onFocus }\n          onInput={ onInput }\n          aria-disabled={ !!props.disabled }\n          aria-label={ props.label }\n          type={ props.type }\n          value={ trueValue.value }\n          name={ props.name }\n          aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n          { ...inputAttrs }\n        />\n      )\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          style={ props.style }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.({\n              backgroundColorClasses,\n              backgroundColorStyles,\n            })}\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                backgroundColorClasses,\n                backgroundColorStyles,\n                inputNode,\n                icon: icon.value,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } satisfies SelectionControlSlot) ?? (\n                <>\n                  { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n                  { inputNode }\n                </>\n              )}\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } onClick={ onClickLabel }>\n              { label }\n            </VLabel>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n","// Components\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, omit, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { GenericProps } from '@/util'\n\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n\n  ...makeVSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn',\n  }),\n}, 'VCheckboxBtn')\n\nexport const VCheckboxBtn = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VCheckboxBtn',\n\n  props: makeVCheckboxBtnProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n\n    function onChange (v: any) {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    const falseIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.falseIcon\n    })\n\n    const trueIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.trueIcon\n    })\n\n    useRender(() => {\n      const controlProps = omit(VSelectionControl.filterProps(props), ['modelValue'])\n      return (\n        <VSelectionControl\n          { ...controlProps }\n          v-model={ model.value }\n          class={[\n            'v-checkbox-btn',\n            props.class,\n          ]}\n          style={ props.style }\n          type=\"checkbox\"\n          onUpdate:modelValue={ onChange }\n          falseIcon={ falseIcon.value }\n          trueIcon={ trueIcon.value }\n          aria-checked={ indeterminate.value ? 'mixed' : undefined }\n          v-slots={ slots }\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckboxBtn = InstanceType<typeof VCheckboxBtn>\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VOverlay } from '@/components/VOverlay'\nimport { makeVOverlayProps } from '@/components/VOverlay/VOverlay'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useRtl } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useScopeId } from '@/composables/scopeId'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  mergeProps,\n  nextTick,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n} from 'vue'\nimport { VMenuSymbol } from './shared'\nimport {\n  focusableChildren,\n  focusChild,\n  genericComponent,\n  getNextElement,\n  getUid,\n  IN_BROWSER,\n  isClickInsideElement,\n  omit,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { Component } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\n\nexport const makeVMenuProps = propsFactory({\n  // TODO\n  // disableKeys: Boolean,\n  id: String,\n  submenu: Boolean,\n\n  ...omit(makeVOverlayProps({\n    closeDelay: 250,\n    closeOnContentClick: true,\n    locationStrategy: 'connected' as const,\n    location: undefined,\n    openDelay: 300,\n    scrim: false,\n    scrollStrategy: 'reposition' as const,\n    transition: { component: VDialogTransition as Component },\n  }), ['absolute']),\n}, 'VMenu')\n\nexport const VMenu = genericComponent<OverlaySlots>()({\n  name: 'VMenu',\n\n  props: makeVMenuProps(),\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n    const { scopeId } = useScopeId()\n    const { isRtl } = useRtl()\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-menu-${uid}`)\n\n    const overlay = ref<VOverlay>()\n\n    const parent = inject(VMenuSymbol, null)\n    const openChildren = shallowRef(new Set<number>())\n    provide(VMenuSymbol, {\n      register () {\n        openChildren.value.add(uid)\n      },\n      unregister () {\n        openChildren.value.delete(uid)\n      },\n      closeParents (e) {\n        setTimeout(() => {\n          if (!openChildren.value.size &&\n            !props.persistent &&\n            (e == null || (overlay.value?.contentEl && !isClickInsideElement(e, overlay.value.contentEl)))\n          ) {\n            isActive.value = false\n            parent?.closeParents()\n          }\n        }, 40)\n      },\n    })\n\n    onBeforeUnmount(() => {\n      parent?.unregister()\n      document.removeEventListener('focusin', onFocusIn)\n    })\n    onDeactivated(() => isActive.value = false)\n\n    async function onFocusIn (e: FocusEvent) {\n      const before = e.relatedTarget as HTMLElement | null\n      const after = e.target as HTMLElement | null\n\n      await nextTick()\n\n      if (\n        isActive.value &&\n        before !== after &&\n        overlay.value?.contentEl &&\n        // We're the topmost menu\n        overlay.value?.globalTop &&\n        // It isn't the document or the menu body\n        ![document, overlay.value.contentEl].includes(after!) &&\n        // It isn't inside the menu body\n        !overlay.value.contentEl.contains(after)\n      ) {\n        const focusable = focusableChildren(overlay.value.contentEl)\n        focusable[0]?.focus()\n      }\n    }\n\n    watch(isActive, val => {\n      if (val) {\n        parent?.register()\n        if (IN_BROWSER) {\n          document.addEventListener('focusin', onFocusIn, { once: true })\n        }\n      } else {\n        parent?.unregister()\n        if (IN_BROWSER) {\n          document.removeEventListener('focusin', onFocusIn)\n        }\n      }\n    }, { immediate: true })\n\n    function onClickOutside (e: MouseEvent) {\n      parent?.closeParents(e)\n    }\n\n    function onKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      if (e.key === 'Tab' || (e.key === 'Enter' && !props.closeOnContentClick)) {\n        if (\n          e.key === 'Enter' &&\n          ((e.target instanceof HTMLTextAreaElement) ||\n          (e.target instanceof HTMLInputElement && !!e.target.closest('form')))\n        ) return\n        if (e.key === 'Enter') e.preventDefault()\n\n        const nextElement = getNextElement(\n          focusableChildren(overlay.value?.contentEl as Element, false),\n          e.shiftKey ? 'prev' : 'next',\n          (el: HTMLElement) => el.tabIndex >= 0\n        )\n        if (!nextElement) {\n          isActive.value = false\n          overlay.value?.activatorEl?.focus()\n        }\n      } else if (props.submenu && e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n        isActive.value = false\n        overlay.value?.activatorEl?.focus()\n      }\n    }\n\n    function onActivatorKeydown (e: KeyboardEvent) {\n      if (props.disabled) return\n\n      const el = overlay.value?.contentEl\n      if (el && isActive.value) {\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'next')\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          focusChild(el, 'prev')\n        } else if (props.submenu) {\n          if (e.key === (isRtl.value ? 'ArrowRight' : 'ArrowLeft')) {\n            isActive.value = false\n          } else if (e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')) {\n            e.preventDefault()\n            focusChild(el, 'first')\n          }\n        }\n      } else if (\n        props.submenu\n          ? e.key === (isRtl.value ? 'ArrowLeft' : 'ArrowRight')\n          : ['ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        isActive.value = true\n        e.preventDefault()\n        setTimeout(() => setTimeout(() => onActivatorKeydown(e)))\n      }\n    }\n\n    const activatorProps = computed(() =>\n      mergeProps({\n        'aria-haspopup': 'menu',\n        'aria-expanded': String(isActive.value),\n        'aria-owns': id.value,\n        onKeydown: onActivatorKeydown,\n      }, props.activatorProps)\n    )\n\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props)\n\n      return (\n        <VOverlay\n          ref={ overlay }\n          id={ id.value }\n          class={[\n            'v-menu',\n            props.class,\n          ]}\n          style={ props.style }\n          { ...overlayProps }\n          v-model={ isActive.value }\n          absolute\n          activatorProps={ activatorProps.value }\n          location={ props.location ?? (props.submenu ? 'end' : 'bottom') }\n          onClick:outside={ onClickOutside }\n          onKeydown={ onKeydown }\n          { ...scopeId }\n        >\n          {{\n            activator: slots.activator,\n            default: (...args) => (\n              <VDefaultsProvider root=\"VMenu\">\n                { slots.default?.(...args) }\n              </VDefaultsProvider>\n            ),\n          }}\n        </VOverlay>\n      )\n    })\n\n    return forwardRefs({ id, ΨopenChildren: openChildren }, overlay)\n  },\n})\n\nexport type VMenu = InstanceType<typeof VMenu>\n","// Styles\nimport './VSelect.sass'\n\n// Components\nimport { VDialogTransition } from '@/components/transitions'\nimport { VAvatar } from '@/components/VAvatar'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from './useScrolling'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\nimport { makeItemsProps, useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  checkPrintable,\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps, SelectItemKey } from '@/util'\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close',\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open',\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object as PropType<VList['$props']>,\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown',\n  },\n  menuProps: {\n    type: Object as PropType<VMenu['$props']>,\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText',\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n\n  ...makeItemsProps({ itemChildren: false }),\n}, 'Select')\n\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: { component: VDialogTransition as Component } }),\n}, 'VSelect')\n\ntype ItemType<T> = T extends readonly (infer U)[] ? U : never\n\nexport const VSelect = genericComponent<new <\n  T extends readonly any[],\n  Item = ItemType<T>,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    itemTitle?: SelectItemKey<ItemType<T>>\n    itemValue?: SelectItemKey<ItemType<T>>\n    itemProps?: SelectItemKey<ItemType<T>>\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (value: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelect',\n\n  props: makeVSelectProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:menu': (ue: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren.size) return\n        _menu.value = v\n      },\n    })\n    const { items, transformIn, transformOut } = useItems(props)\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : model.value.length\n    })\n    const form = useForm(props)\n    const selectedValues = computed(() => model.value.map(selection => selection.value))\n    const isFocused = shallowRef(false)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n\n    let keyboardLookupPrefix = ''\n    let keyboardLookupLastTime: number\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => props.valueComparator(s, item)))\n      }\n      return items.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !displayItems.value.length) ||\n      form.isReadonly.value || form.isDisabled.value\n    ))\n\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox', // Set aria-haspopup to 'listbox'\n        },\n      }\n    })\n\n    const listRef = ref<VList>()\n    const listEvents = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = !menu.value\n    }\n    function onListKeydown (e: KeyboardEvent) {\n      if (checkPrintable(e)) {\n        onKeydown(e)\n      }\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (!e.key || form.isReadonly.value) return\n\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (e.key === 'Home') {\n        listRef.value?.focus('first')\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last')\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n\n      if (props.multiple || !checkPrintable(e)) return\n\n      const now = performance.now()\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = ''\n      }\n      keyboardLookupPrefix += e.key.toLowerCase()\n      keyboardLookupLastTime = now\n\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix))\n      if (item !== undefined) {\n        model.value = [item]\n        const index = displayItems.value.indexOf(item)\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select (item: ListItem, set: boolean | null = true) {\n      if (item.props.disabled) return\n\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n        const add = set == null ? !~index : set\n\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        } else if (add) {\n          model.value = [...model.value, item]\n        }\n      } else {\n        const add = set !== false\n        model.value = add ? [item] : []\n\n        nextTick(() => {\n          menu.value = false\n        })\n      }\n    }\n    function onBlur (e: FocusEvent) {\n      if (!listRef.value?.$el.contains(e.relatedTarget as HTMLElement)) {\n        menu.value = false\n      }\n    }\n    function onAfterEnter () {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems()\n      }\n    }\n    function onAfterLeave () {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus()\n      }\n    }\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n    }\n    function onModelUpdate (v: any) {\n      if (v == null) model.value = []\n      else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v)\n        if (item) {\n          select(item)\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = ''\n      }\n    }\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => props.valueComparator(s.value, item.value))\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return\n\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      const placeholder = isDirty || (\n        !isFocused.value &&\n        props.label &&\n        !props.persistentPlaceholder\n      ) ? undefined : props.placeholder\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ model.value.map(v => v.props.value).join(', ') }\n          onUpdate:modelValue={ onModelUpdate }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ counterValue.value }\n          dirty={ isDirty }\n          class={[\n            'v-select',\n            {\n              'v-select--active-menu': menu.value,\n              'v-select--chips': !!props.chips,\n              [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n              'v-select--selected': model.value.length,\n              'v-select--selection-slot': !!slots.selection,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          inputmode=\"none\"\n          placeholder={ placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onBlur={ onBlur }\n          onKeydown={ onKeydown }\n          aria-label={ t(label.value) }\n          title={ t(label.value) }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-select__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterEnter={ onAfterEnter }\n                  onAfterLeave={ onAfterLeave }\n                  { ...computedMenuProps.value }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      tabindex=\"-1\"\n                      aria-live=\"polite\"\n                      color={ props.itemColor ?? props.color }\n                      { ...listEvents }\n                      { ...props.listProps }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem key=\"no-data\" title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: item.value,\n                            onClick: () => select(item, null),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps } role=\"option\">\n                              {{\n                                prepend: ({ isSelected }) => (\n                                  <>\n                                    { props.multiple && !props.hideSelected ? (\n                                      <VCheckboxBtn\n                                        key={ item.value }\n                                        modelValue={ isSelected }\n                                        ripple={ false }\n                                        tabindex=\"-1\"\n                                      />\n                                    ) : undefined }\n\n                                    { item.props.prependAvatar && (\n                                      <VAvatar image={ item.props.prependAvatar } />\n                                    )}\n\n                                    { item.props.prependIcon && (\n                                      <VIcon icon={ item.props.prependIcon } />\n                                    )}\n                                  </>\n                                ),\n                              }}\n                            </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item, false)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onKeydown (e: KeyboardEvent) {\n                      if (e.key !== 'Enter' && e.key !== ' ') return\n\n                      e.preventDefault()\n                      e.stopPropagation()\n\n                      onChipClose(e)\n                    },\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div key={ item.value } class=\"v-select__selection\">\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-select__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-select__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-select__menu-icon\"\n                    icon={ props.menuIcon }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      menu,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VSelect = InstanceType<typeof VSelect>\n","// Utilities\nimport { shallowRef, watch } from 'vue'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { VList } from '@/components/VList'\nimport type { VTextField } from '@/components/VTextField'\n\nexport function useScrolling (listRef: Ref<VList | undefined>, textFieldRef: Ref<VTextField | undefined>) {\n  const isScrolling = shallowRef(false)\n  let scrollTimeout: number\n  function onListScroll (e: Event) {\n    cancelAnimationFrame(scrollTimeout)\n    isScrolling.value = true\n    scrollTimeout = requestAnimationFrame(() => {\n      scrollTimeout = requestAnimationFrame(() => {\n        isScrolling.value = false\n      })\n    })\n  }\n  async function finishScrolling () {\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise(resolve => requestAnimationFrame(resolve))\n    await new Promise<void>(resolve => {\n      if (isScrolling.value) {\n        const stop = watch(isScrolling, () => {\n          stop()\n          resolve()\n        })\n      } else resolve()\n    })\n  }\n  async function onListKeydown (e: KeyboardEvent) {\n    if (e.key === 'Tab') {\n      textFieldRef.value?.focus()\n    }\n\n    if (!['PageDown', 'PageUp', 'Home', 'End'].includes(e.key)) return\n    const el: HTMLElement = listRef.value?.$el\n    if (!el) return\n\n    if (e.key === 'Home' || e.key === 'End') {\n      el.scrollTo({\n        top: e.key === 'Home' ? 0 : el.scrollHeight,\n        behavior: 'smooth',\n      })\n    }\n\n    await finishScrolling()\n\n    const children = el.querySelectorAll(':scope > :not(.v-virtual-scroll__spacer)')\n\n    if (e.key === 'PageDown' || e.key === 'Home') {\n      const top = el.getBoundingClientRect().top\n      for (const child of children) {\n        if (child.getBoundingClientRect().top >= top) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    } else {\n      const bottom = el.getBoundingClientRect().bottom\n      for (const child of [...children].reverse()) {\n        if (child.getBoundingClientRect().bottom <= bottom) {\n          (child as HTMLElement).focus()\n          break\n        }\n      }\n    }\n  }\n\n  return {\n    onScrollPassive: onListScroll,\n    onKeydown: onListKeydown,\n  } as Record<string, Function> // typescript doesn't know about vue's event merging\n}\n","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { watch } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { GenericProps, TemplateRef } from '@/util'\n\nexport const makeVVirtualScrollItemProps = propsFactory({\n  renderless: Boolean,\n\n  ...makeComponentProps(),\n}, 'VVirtualScrollItem')\n\nexport const VVirtualScrollItem = genericComponent<new <Renderless extends boolean = false>(\n  props: {\n    renderless?: Renderless\n  },\n  slots: {\n    default: Renderless extends true ? {\n      itemRef: TemplateRef\n    } : never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScrollItem',\n\n  inheritAttrs: false,\n\n  props: makeVVirtualScrollItemProps(),\n\n  emits: {\n    'update:height': (height: number) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { resizeRef, contentRect } = useResizeObserver(undefined, 'border')\n\n    watch(() => contentRect.value?.height, height => {\n      if (height != null) emit('update:height', height)\n    })\n\n    useRender(() => props.renderless ? (\n      <>\n        { slots.default?.({ itemRef: resizeRef }) }\n      </>\n    ) : (\n      <div\n        ref={ resizeRef }\n        class={[\n          'v-virtual-scroll__item',\n          props.class,\n        ]}\n        style={ props.style }\n        { ...attrs }\n      >\n        { (slots.default as any)?.() }\n      </div>\n    ))\n  },\n})\n","// Composables\nimport { useDisplay } from '@/composables/display'\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport { computed, nextTick, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue'\nimport { clamp, debounce, IN_BROWSER, isObject, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\nconst UP = -1\nconst DOWN = 1\n\n/** Determines how large each batch of items should be */\nconst BUFFER_PX = 100\n\ntype VirtualProps = {\n  itemHeight?: number | string\n  height?: number | string\n}\n\nexport const makeVirtualProps = propsFactory({\n  itemHeight: {\n    type: [Number, String],\n    default: null,\n  },\n  height: [Number, String],\n}, 'virtual')\n\nexport function useVirtual <T> (props: VirtualProps, items: Ref<readonly T[]>) {\n  const display = useDisplay()\n\n  const itemHeight = shallowRef(0)\n  watchEffect(() => {\n    itemHeight.value = parseFloat(props.itemHeight || 0)\n  })\n\n  const first = shallowRef(0)\n  const last = shallowRef(Math.ceil(\n    // Assume 16px items filling the entire screen height if\n    // not provided. This is probably incorrect but it minimises\n    // the chance of ending up with empty space at the bottom.\n    // The default value is set here to avoid poisoning getSize()\n    (parseInt(props.height!) || display.height.value) / (itemHeight.value || 16)\n  ) || 1)\n  const paddingTop = shallowRef(0)\n  const paddingBottom = shallowRef(0)\n\n  /** The scrollable element */\n  const containerRef = ref<HTMLElement>()\n  /** An element marking the top of the scrollable area,\n   * used to add an offset if there's padding or other elements above the virtual list */\n  const markerRef = ref<HTMLElement>()\n  /** markerRef's offsetTop, lazily evaluated */\n  let markerOffset = 0\n\n  const { resizeRef, contentRect } = useResizeObserver()\n  watchEffect(() => {\n    resizeRef.value = containerRef.value\n  })\n  const viewportHeight = computed(() => {\n    return containerRef.value === document.documentElement\n      ? display.height.value\n      : contentRect.value?.height || parseInt(props.height!) || 0\n  })\n  /** All static elements have been rendered and we have an assumed item height */\n  const hasInitialRender = computed(() => {\n    return !!(containerRef.value && markerRef.value && viewportHeight.value && itemHeight.value)\n  })\n\n  let sizes = Array.from<number | null>({ length: items.value.length })\n  let offsets = Array.from<number>({ length: items.value.length })\n  const updateTime = shallowRef(0)\n  let targetScrollIndex = -1\n\n  function getSize (index: number) {\n    return sizes[index] || itemHeight.value\n  }\n\n  const updateOffsets = debounce(() => {\n    const start = performance.now()\n    offsets[0] = 0\n    const length = items.value.length\n    for (let i = 1; i <= length - 1; i++) {\n      offsets[i] = (offsets[i - 1] || 0) + getSize(i - 1)\n    }\n    updateTime.value = Math.max(updateTime.value, performance.now() - start)\n  }, updateTime)\n\n  const unwatch = watch(hasInitialRender, v => {\n    if (!v) return\n    // First render is complete, update offsets and visible\n    // items in case our assumed item height was incorrect\n\n    unwatch()\n    markerOffset = markerRef.value!.offsetTop\n    updateOffsets.immediate()\n    calculateVisibleItems()\n\n    if (!~targetScrollIndex) return\n\n    nextTick(() => {\n      IN_BROWSER && window.requestAnimationFrame(() => {\n        scrollToIndex(targetScrollIndex)\n        targetScrollIndex = -1\n      })\n    })\n  })\n\n  onScopeDispose(() => {\n    updateOffsets.clear()\n  })\n\n  function handleItemResize (index: number, height: number) {\n    const prevHeight = sizes[index]\n    const prevMinHeight = itemHeight.value\n\n    itemHeight.value = prevMinHeight ? Math.min(itemHeight.value, height) : height\n\n    if (prevHeight !== height || prevMinHeight !== itemHeight.value) {\n      sizes[index] = height\n      updateOffsets()\n    }\n  }\n\n  function calculateOffset (index: number) {\n    index = clamp(index, 0, items.value.length - 1)\n    return offsets[index] || 0\n  }\n\n  function calculateIndex (scrollTop: number) {\n    return binaryClosest(offsets, scrollTop)\n  }\n\n  let lastScrollTop = 0\n  let scrollVelocity = 0\n  let lastScrollTime = 0\n\n  watch(viewportHeight, (val, oldVal) => {\n    if (oldVal) {\n      calculateVisibleItems()\n      if (val < oldVal) {\n        requestAnimationFrame(() => {\n          scrollVelocity = 0\n          calculateVisibleItems()\n        })\n      }\n    }\n  })\n\n  let scrollTimeout = -1\n  function handleScroll () {\n    if (!containerRef.value || !markerRef.value) return\n\n    const scrollTop = containerRef.value.scrollTop\n    const scrollTime = performance.now()\n    const scrollDeltaT = scrollTime - lastScrollTime\n\n    if (scrollDeltaT > 500) {\n      scrollVelocity = Math.sign(scrollTop - lastScrollTop)\n\n      // Not super important, only update at the\n      // start of a scroll sequence to avoid reflows\n      markerOffset = markerRef.value.offsetTop\n    } else {\n      scrollVelocity = scrollTop - lastScrollTop\n    }\n\n    lastScrollTop = scrollTop\n    lastScrollTime = scrollTime\n\n    window.clearTimeout(scrollTimeout)\n    scrollTimeout = window.setTimeout(handleScrollend, 500)\n\n    calculateVisibleItems()\n  }\n  function handleScrollend () {\n    if (!containerRef.value || !markerRef.value) return\n\n    scrollVelocity = 0\n    lastScrollTime = 0\n\n    window.clearTimeout(scrollTimeout)\n    calculateVisibleItems()\n  }\n\n  let raf = -1\n  function calculateVisibleItems () {\n    cancelAnimationFrame(raf)\n    raf = requestAnimationFrame(_calculateVisibleItems)\n  }\n  function _calculateVisibleItems () {\n    if (!containerRef.value || !viewportHeight.value) return\n    const scrollTop = lastScrollTop - markerOffset\n    const direction = Math.sign(scrollVelocity)\n\n    const startPx = Math.max(0, scrollTop - BUFFER_PX)\n    const start = clamp(calculateIndex(startPx), 0, items.value.length)\n\n    const endPx = scrollTop + viewportHeight.value + BUFFER_PX\n    const end = clamp(calculateIndex(endPx) + 1, start + 1, items.value.length)\n\n    if (\n      // Only update the side we're scrolling towards,\n      // the other side will be updated incidentally\n      (direction !== UP || start < first.value) &&\n      (direction !== DOWN || end > last.value)\n    ) {\n      const topOverflow = calculateOffset(first.value) - calculateOffset(start)\n      const bottomOverflow = calculateOffset(end) - calculateOffset(last.value)\n      const bufferOverflow = Math.max(topOverflow, bottomOverflow)\n\n      if (bufferOverflow > BUFFER_PX) {\n        first.value = start\n        last.value = end\n      } else {\n        // Only update the side that's reached its limit if there's still buffer left\n        if (start <= 0) first.value = start\n        if (end >= items.value.length) last.value = end\n      }\n    }\n\n    paddingTop.value = calculateOffset(first.value)\n    paddingBottom.value = calculateOffset(items.value.length) - calculateOffset(last.value)\n  }\n\n  function scrollToIndex (index: number) {\n    const offset = calculateOffset(index)\n    if (!containerRef.value || (index && !offset)) {\n      targetScrollIndex = index\n    } else {\n      containerRef.value.scrollTop = offset\n    }\n  }\n\n  const computedItems = computed(() => {\n    return items.value.slice(first.value, last.value).map((item, index) => ({\n      raw: item,\n      index: index + first.value,\n      key: (isObject(item) && 'value' in item) ? item.value : index + first.value,\n    }))\n  })\n\n  watch(items, () => {\n    sizes = Array.from({ length: items.value.length })\n    offsets = Array.from({ length: items.value.length })\n    updateOffsets.immediate()\n    calculateVisibleItems()\n  }, { deep: true })\n\n  return {\n    calculateVisibleItems,\n    containerRef,\n    markerRef,\n    computedItems,\n    paddingTop,\n    paddingBottom,\n    scrollToIndex,\n    handleScroll,\n    handleScrollend,\n    handleItemResize,\n  }\n}\n\n// https://gist.github.com/robertleeplummerjr/1cc657191d34ecd0a324\nfunction binaryClosest (arr: ArrayLike<number>, val: number) {\n  let high = arr.length - 1\n  let low = 0\n  let mid = 0\n  let item = null\n  let target = -1\n\n  if (arr[high]! < val) {\n    return high\n  }\n\n  while (low <= high) {\n    mid = (low + high) >> 1\n    item = arr[mid]!\n\n    if (item > val) {\n      high = mid - 1\n    } else if (item < val) {\n      target = mid\n      low = mid + 1\n    } else if (item === val) {\n      return mid\n    } else {\n      return low\n    }\n  }\n\n  return target\n}\n","// Styles\nimport './VVirtualScroll.sass'\n\n// Components\nimport { VVirtualScrollItem } from './VVirtualScrollItem'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { useToggleScope } from '@/composables/toggleScope'\nimport { makeVirtualProps, useVirtual } from '@/composables/virtual'\n\n// Utilities\nimport { onMounted, onScopeDispose, toRef } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getCurrentInstance,\n  getScrollParent,\n  propsFactory,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { GenericProps } from '@/util'\n\nexport interface VVirtualScrollSlot<T> {\n  item: T\n  index: number\n}\n\nexport const makeVVirtualScrollProps = propsFactory({\n  items: {\n    type: Array as PropType<readonly unknown[]>,\n    default: () => ([]),\n  },\n  renderless: Boolean,\n\n  ...makeVirtualProps(),\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n}, 'VVirtualScroll')\n\nexport const VVirtualScroll = genericComponent<new <T, Renderless extends boolean = false>(\n  props: {\n    items?: readonly T[]\n    renderless?: Renderless\n  },\n  slots: {\n    default: VVirtualScrollSlot<T> & (Renderless extends true ? {\n      itemRef: Ref<HTMLElement | undefined>\n    } : {})\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VVirtualScroll',\n\n  props: makeVVirtualScrollProps(),\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance('VVirtualScroll')\n    const { dimensionStyles } = useDimension(props)\n    const {\n      calculateVisibleItems,\n      containerRef,\n      markerRef,\n      handleScroll,\n      handleScrollend,\n      handleItemResize,\n      scrollToIndex,\n      paddingTop,\n      paddingBottom,\n      computedItems,\n    } = useVirtual(props, toRef(props, 'items'))\n\n    useToggleScope(() => props.renderless, () => {\n      function handleListeners (add = false) {\n        const method = add ? 'addEventListener' : 'removeEventListener'\n\n        if (containerRef.value === document.documentElement) {\n          document[method]('scroll', handleScroll, { passive: true })\n          document[method]('scrollend', handleScrollend)\n        } else {\n          containerRef.value?.[method]('scroll', handleScroll, { passive: true })\n          containerRef.value?.[method]('scrollend', handleScrollend)\n        }\n      }\n\n      onMounted(() => {\n        containerRef.value = getScrollParent(vm.vnode.el as HTMLElement, true)\n        handleListeners(true)\n      })\n      onScopeDispose(handleListeners)\n    })\n\n    useRender(() => {\n      const children = computedItems.value.map(item => (\n        <VVirtualScrollItem\n          key={ item.key }\n          renderless={ props.renderless }\n          onUpdate:height={ height => handleItemResize(item.index, height) }\n        >\n          { slotProps => slots.default?.({ item: item.raw, index: item.index, ...slotProps }) }\n        </VVirtualScrollItem>\n      ))\n\n      return props.renderless ? (\n        <>\n          <div ref={ markerRef } class=\"v-virtual-scroll__spacer\" style={{ paddingTop: convertToUnit(paddingTop.value) }} />\n          { children }\n          <div class=\"v-virtual-scroll__spacer\" style={{ paddingBottom: convertToUnit(paddingBottom.value) }} />\n        </>\n      ) : (\n        <div\n          ref={ containerRef }\n          class={[\n            'v-virtual-scroll',\n            props.class,\n          ]}\n          onScrollPassive={ handleScroll }\n          onScrollend={ handleScrollend }\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          <div\n            ref={ markerRef }\n            class=\"v-virtual-scroll__container\"\n            style={{\n              paddingTop: convertToUnit(paddingTop.value),\n              paddingBottom: convertToUnit(paddingBottom.value),\n            }}\n          >\n            { children }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      calculateVisibleItems,\n      scrollToIndex,\n    }\n  },\n})\n\nexport type VVirtualScroll = InstanceType<typeof VVirtualScroll>\n","// Utilities\nimport { Transition } from 'vue'\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n} from '@/util'\nimport { getTargetBox } from '@/util/box'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDialogTransitionProps = propsFactory({\n  target: [Object, Array] as PropType<HTMLElement | [x: number, y: number]>,\n}, 'v-dialog-transition')\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: makeVDialogTransitionProps(),\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement | [x: number, y: number], el: HTMLElement) {\n  const targetBox = getTargetBox(target)\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n"],"names":["VSelectionControlGroupSymbol","Symbol","for","makeSelectionControlGroupProps","propsFactory","color","String","disabled","type","Boolean","default","defaultsTarget","error","id","inline","falseIcon","IconValue","trueIcon","ripple","Object","multiple","name","readonly","modelValue","valueComparator","Function","deepEqual","makeComponentProps","makeDensityProps","makeThemeProps","makeVSelectionControlGroupProps","genericComponent","props","emits","value","setup","_ref","slots","useProxiedModel","uid","getUid","computed","updateHandlers","Set","provide","forceUpdate","forEach","fn","onForceUpdate","cb","add","onScopeDispose","delete","provideDefaults","toRef","density","Array","isArray","useRender","_createVNode","class","style","undefined","makeVSelectionControlProps","label","baseColor","trueValue","falseValue","useSelectionControl","group","inject","densityClasses","useDensity","isMultiple","model","get","val","wrapInArray","some","v","set","currentValue","newVal","filter","item","textColorClasses","textColorStyles","useTextColor","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","icon","VSelectionControl","directives","Ripple","inheritAttrs","attrs","isFocused","shallowRef","isFocusVisible","input","ref","isInteractive","onFocus","e","matchesSelector","target","onBlur","onClickLabel","stopPropagation","onInput","nextTick","checked","rootAttrs","inputAttrs","filterInputAttrs","inputNode","_mergeProps","_withDirectives","_Fragment","VIcon","_resolveDirective","VLabel","makeVCheckboxBtnProps","indeterminate","indeterminateIcon","VCheckboxBtn","onChange","controlProps","omit","filterProps","$event","makeVMenuProps","submenu","makeVOverlayProps","closeDelay","closeOnContentClick","locationStrategy","location","openDelay","scrim","scrollStrategy","transition","component","VDialogTransition","VMenu","isActive","scopeId","useScopeId","isRtl","useRtl","overlay","parent","VMenuSymbol","openChildren","async","onFocusIn","before","relatedTarget","after","contentEl","globalTop","document","includes","contains","focusable","focusableChildren","focus","onClickOutside","closeParents","onKeydown","key","HTMLTextAreaElement","HTMLInputElement","closest","preventDefault","nextElement","getNextElement","shiftKey","el","tabIndex","activatorEl","onActivatorKeydown","stopImmediatePropagation","focusChild","setTimeout","register","unregister","size","persistent","isClickInsideElement","onBeforeUnmount","removeEventListener","onDeactivated","watch","IN_BROWSER","addEventListener","once","immediate","activatorProps","mergeProps","overlayProps","VOverlay","activator","_len","arguments","length","args","_key","VDefaultsProvider","forwardRefs","ΨopenChildren","makeSelectProps","chips","closableChips","closeText","openText","eager","hideNoData","hideSelected","listProps","menu","menuIcon","menuProps","noDataText","openOnClear","itemColor","makeItemsProps","itemChildren","makeVSelectProps","makeVTextFieldProps","role","makeTransitionProps","VSelect","focused","ue","t","useLocale","vTextFieldRef","vMenuRef","vVirtualScrollRef","_menu","items","transformIn","transformOut","useItems","transformed","counterValue","form","useForm","selectedValues","map","selection","keyboardLookupLastTime","keyboardLookupPrefix","displayItems","s","menuDisabled","isReadonly","isDisabled","computedMenuProps","listRef","listEvents","useScrolling","onClear","onMousedownControl","onListKeydown","checkPrintable","KEYBOARD_LOOKUP_THRESHOLD","now","performance","toLowerCase","find","title","startsWith","index","indexOf","window","requestAnimationFrame","scrollToIndex","select","findIndex","splice","$el","onAfterEnter","calculateVisibleItems","onAfterLeave","onFocusin","onModelUpdate","oldVal","hasChips","chip","hasList","isDirty","textFieldProps","VTextField","placeholder","persistentPlaceholder","join","externalValue","VList","VListItem","VVirtualScroll","_ref2","itemRef","itemProps","onClick","prepend","_ref3","isSelected","prependAvatar","VAvatar","prependIcon","onChipClose","slotProps","onMousedown","hasSlot","slotContent","ensureValidVNode","VChip","closable","text","_createTextVNode","textFieldRef","isScrolling","scrollTimeout","onListScroll","cancelAnimationFrame","finishScrolling","Promise","resolve","stop","scrollTo","top","scrollHeight","behavior","children","querySelectorAll","getBoundingClientRect","child","bottom","reverse","onScrollPassive","makeVVirtualScrollItemProps","renderless","VVirtualScrollItem","height","emit","resizeRef","contentRect","useResizeObserver","UP","DOWN","BUFFER_PX","makeVirtualProps","itemHeight","Number","useVirtual","display","useDisplay","watchEffect","parseFloat","first","last","Math","ceil","parseInt","paddingTop","paddingBottom","containerRef","markerRef","markerOffset","viewportHeight","documentElement","hasInitialRender","sizes","from","offsets","updateTime","targetScrollIndex","getSize","updateOffsets","debounce","start","i","max","unwatch","offsetTop","handleItemResize","prevHeight","prevMinHeight","min","calculateOffset","clamp","calculateIndex","scrollTop","binaryClosest","clear","lastScrollTop","scrollVelocity","lastScrollTime","handleScroll","scrollTime","scrollDeltaT","sign","clearTimeout","handleScrollend","raf","_calculateVisibleItems","direction","startPx","endPx","end","topOverflow","bottomOverflow","bufferOverflow","offset","computedItems","slice","raw","isObject","deep","arr","high","low","mid","makeVVirtualScrollProps","makeDimensionProps","vm","getCurrentInstance","dimensionStyles","useDimension","useToggleScope","handleListeners","method","passive","onMounted","getScrollParent","vnode","convertToUnit","makeVDialogTransitionProps","functions","onBeforeEnter","pointerEvents","visibility","onEnter","done","x","y","sx","sy","speed","getDimensions","animation","animate","transform","opacity","duration","easing","deceleratedEasing","getChildren","standardEasing","finished","then","removeProperty","onBeforeLeave","onLeave","acceleratedEasing","Transition","els","querySelector","targetBox","getTargetBox","elBox","nullifyTransforms","originX","originY","getComputedStyle","transformOrigin","split","anchorSide","anchorOffset","getPropertyValue","offsetX","left","width","offsetY","tsx","tsy","maxs","asa","innerWidth","innerHeight"],"sourceRoot":""}
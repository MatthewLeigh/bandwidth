{"version":3,"file":"js/253.58949dbf.js","mappings":"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","sources":["webpack://bandwidth-v3/./src/views/LoginView.vue?ff98","webpack://bandwidth-v3/./src/views/LoginView.vue","webpack://bandwidth-v3/./src/components/LoginForm.vue?5a7b","webpack://bandwidth-v3/./src/components/LoginForm.vue","webpack://bandwidth-v3/./src/components/LoginForm.vue?dcb9","webpack://bandwidth-v3/./src/components/SignUpForm.vue?7725","webpack://bandwidth-v3/./src/components/SignUpForm.vue","webpack://bandwidth-v3/./src/components/SignUpForm.vue?4c80","webpack://bandwidth-v3/./src/views/LoginView.vue?5755","webpack://bandwidth-v3/../../../src/components/VForm/VForm.tsx"],"sourcesContent":["import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_LoginForm = _resolveComponent(\"LoginForm\")!\n  const _component_SignUpForm = _resolveComponent(\"SignUpForm\")!\n  const _component_v_container = _resolveComponent(\"v-container\")!\n\n  return (_openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [\n      (_ctx.currentForm === 'login')\n        ? (_openBlock(), _createBlock(_component_LoginForm, {\n            key: 0,\n            onToggleCurrentForm: _ctx.toggleCurrentForm\n          }, null, 8, [\"onToggleCurrentForm\"]))\n        : (_openBlock(), _createBlock(_component_SignUpForm, {\n            key: 1,\n            onToggleCurrentForm: _ctx.toggleCurrentForm\n          }, null, 8, [\"onToggleCurrentForm\"]))\n    ]),\n    _: 1\n  }))\n}","<template>\r\n    <v-container>\r\n\r\n        <LoginForm\r\n            v-if=\"currentForm === 'login'\"\r\n            @toggleCurrentForm=\"toggleCurrentForm\"\r\n        />\r\n\r\n        <SignUpForm\r\n            v-else\r\n            @toggleCurrentForm=\"toggleCurrentForm\"\r\n        />\r\n\r\n    </v-container>\r\n  </template>\r\n\r\n  <script lang=\"ts\">\r\n    import { defineComponent } from \"vue\";\r\n    import LoginForm from \"@/components/LoginForm.vue\";\r\n    import SignUpForm from \"@/components/SignUpForm.vue\";\r\n\r\n    import { storeToRefs } from 'pinia';\r\n    import { useSessionStore } from '@/stores/session';\r\n\r\n    export default defineComponent({\r\n        name: \"LoginView\",\r\n\r\n        setup() {\r\n            const sessionStore = useSessionStore();\r\n            const { getUser: user } = storeToRefs(sessionStore);\r\n\r\n            return { user, sessionStore };\r\n        },\r\n\r\n        components: {\r\n            LoginForm,\r\n            SignUpForm\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                currentForm: \"login\"\r\n            }\r\n        },\r\n\r\n        methods: {\r\n\r\n            handleLogin() {\r\n                this.sessionStore.login({\r\n                    userId: \"1\"\r\n                });\r\n            },\r\n\r\n            handleLogout() {\r\n                this.sessionStore.logout();\r\n            },\r\n\r\n            toggleCurrentForm() {\r\n                this.currentForm = this.currentForm === \"login\" ? \"signup\" : \"login\";\r\n            }\r\n        },\r\n\r\n    });\r\n  </script>\r\n","import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"form-wrapper\" }\nconst _hoisted_2 = { class: \"form-filler\" }\nconst _hoisted_3 = { class: \"form-buttons\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_v_icon = _resolveComponent(\"v-icon\")!\n  const _component_v_btn = _resolveComponent(\"v-btn\")!\n  const _component_v_text_field = _resolveComponent(\"v-text-field\")!\n  const _component_v_form = _resolveComponent(\"v-form\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_v_icon, { \"aria-hidden\": \"true\" }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [\n          _createTextVNode(\"mdi-account-circle\")\n        ])),\n        _: 1\n      }),\n      _cache[4] || (_cache[4] = _createElementVNode(\"p\", { id: \"signup-prompt\" }, \"Don't have an account yet?\", -1)),\n      _createVNode(_component_v_btn, {\n        flat: \"\",\n        onClick: _ctx.toggleCurrentForm,\n        \"aria-labelledby\": \"signup-prompt\"\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [\n          _createTextVNode(\"Create Account\")\n        ])),\n        _: 1\n      }, 8, [\"onClick\"])\n    ]),\n    _createVNode(_component_v_form, {\n      onSubmit: _withModifiers(_ctx.submitForm, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [\n        _cache[8] || (_cache[8] = _createElementVNode(\"div\", null, [\n          _createElementVNode(\"p\", { class: \"form-title\" }, \"Welcome Back!\"),\n          _createElementVNode(\"p\", { class: \"form-description\" }, \"Please login to access your saved events.\")\n        ], -1)),\n        _createElementVNode(\"fieldset\", null, [\n          _cache[5] || (_cache[5] = _createElementVNode(\"legend\", {\n            class: \"sr-only\",\n            \"aria-label\": \"Login Form\"\n          }, \"Login Form\", -1)),\n          _createVNode(_component_v_text_field, {\n            modelValue: _ctx.email,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.email) = $event)),\n            label: \"Email\",\n            type: \"email\",\n            required: \"\",\n            autocomplete: \"email\",\n            \"aria-label\": \"Email\",\n            \"aria-required\": \"true\"\n          }, null, 8, [\"modelValue\"]),\n          _createVNode(_component_v_text_field, {\n            modelValue: _ctx.password,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.password) = $event)),\n            label: \"Password\",\n            type: \"password\",\n            required: \"\",\n            autocomplete: \"current-password\",\n            \"aria-label\": \"Password\",\n            \"aria-required\": \"true\"\n          }, null, 8, [\"modelValue\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(_component_v_btn, {\n            class: \"clear-button\",\n            onClick: _ctx.clearForm,\n            \"aria-label\": \"Clear Form Button\",\n            flat: \"\"\n          }, {\n            default: _withCtx(() => _cache[6] || (_cache[6] = [\n              _createTextVNode(\" Clear \")\n            ])),\n            _: 1\n          }, 8, [\"onClick\"]),\n          _createVNode(_component_v_btn, {\n            class: \"submit-button\",\n            onClick: _ctx.submitForm,\n            \"aria-label\": \"Submit Form Button\",\n            flat: \"\"\n          }, {\n            default: _withCtx(() => _cache[7] || (_cache[7] = [\n              _createTextVNode(\" Sign In \")\n            ])),\n            _: 1\n          }, 8, [\"onClick\"])\n        ])\n      ]),\n      _: 1\n    }, 8, [\"onSubmit\"])\n  ]))\n}","<template>\r\n    <div class=\"form-wrapper\">\r\n\r\n        <!-- Form Filler -->\r\n        <div class=\"form-filler\">\r\n            <v-icon aria-hidden=\"true\">mdi-account-circle</v-icon>\r\n            <p id=\"signup-prompt\">Don't have an account yet?</p>\r\n            <v-btn flat @click=\"toggleCurrentForm\" aria-labelledby=\"signup-prompt\">Create Account</v-btn>\r\n        </div>\r\n\r\n        <!-- Form -->\r\n        <v-form @submit.prevent=\"submitForm\">\r\n\r\n            <div>\r\n                <p class=\"form-title\">Welcome Back!</p>\r\n                <p class=\"form-description\">Please login to access your saved events.</p>\r\n            </div>\r\n\r\n            <fieldset>\r\n                <legend class=\"sr-only\" aria-label=\"Login Form\">Login Form</legend>\r\n\r\n                <!-- Email -->\r\n                <v-text-field\r\n                    v-model=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    required\r\n                    autocomplete=\"email\"\r\n                    aria-label=\"Email\"\r\n                    aria-required=\"true\"\r\n                />\r\n                <!-- Password -->\r\n                <v-text-field\r\n                    v-model=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    required\r\n                    autocomplete=\"current-password\"\r\n                    aria-label=\"Password\"\r\n                    aria-required=\"true\"\r\n                />\r\n\r\n            </fieldset>\r\n\r\n            <div class=\"form-buttons\">\r\n\r\n                <!-- Clear Button -->\r\n                <v-btn\r\n                    class=\"clear-button\"\r\n                    @click=\"clearForm\"\r\n                    aria-label=\"Clear Form Button\"\r\n                    flat\r\n                >\r\n                    Clear\r\n                </v-btn>\r\n\r\n                <!-- Submit Button -->\r\n                <v-btn\r\n                    class=\"submit-button\"\r\n                    @click=\"submitForm\"\r\n                    aria-label=\"Submit Form Button\"\r\n                    flat\r\n                >\r\n                    Sign In\r\n                </v-btn>\r\n            </div>\r\n\r\n        </v-form>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from \"vue\";\r\n    import { Server } from '@/config/Server';\r\n    import { storeToRefs } from 'pinia';\r\n    import { useSessionStore } from '@/stores/session';\r\n    import { useNavigation } from '@/composables/useNavigation';\r\n    import { useSnackbarStore } from '@/stores/showSnackbar';\r\n\r\n\r\n    export default defineComponent({\r\n        name: 'LoginForm',\r\n\r\n        setup() {\r\n            const sessionStore = useSessionStore();\r\n            const { getUser: user } = storeToRefs(sessionStore);\r\n            const { goTo } = useNavigation();\r\n            const snackbar = useSnackbarStore();\r\n\r\n            return { user, sessionStore, goTo, snackbar };\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                email: '',\r\n                password: '',\r\n            };\r\n        },\r\n\r\n        methods: {\r\n\r\n            // Clear the form\r\n            clearForm() {\r\n                this.email = '';\r\n                this.password = '';\r\n            },\r\n\r\n            // Submit the form\r\n            async submitForm() {\r\n                try {\r\n                    const response = await fetch(`${Server}/get/login/${this.email}/${this.password}`);\r\n\r\n                    if (response.status === 200) {\r\n                        const data = await response.json();\r\n                        this.sessionStore.login({\r\n                            userId: data[0].UserID\r\n                        });\r\n                        this.snackbar.showSnackbar('Login Successful');\r\n                        this.goTo('home');\r\n\r\n                    } else if (response.status === 404) {\r\n                        this.snackbar.showSnackbar('Email or Password is incorrect');\r\n\r\n                    } else {\r\n                        this.snackbar.showSnackbar('Login Unsuccessful');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    this.snackbar.showSnackbar('Login Unsuccessful');\r\n                }\r\n            },\r\n\r\n            // Toggle between login and signup forms\r\n            toggleCurrentForm() {\r\n                this.$emit('toggleCurrentForm');\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n</script>","import { render } from \"./LoginForm.vue?vue&type=template&id=f36ed966&ts=true\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=ts\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"form-wrapper\" }\nconst _hoisted_2 = { class: \"form-buttons\" }\nconst _hoisted_3 = { class: \"form-filler\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\")!\n  const _component_v_select = _resolveComponent(\"v-select\")!\n  const _component_v_btn = _resolveComponent(\"v-btn\")!\n  const _component_v_form = _resolveComponent(\"v-form\")!\n  const _component_v_icon = _resolveComponent(\"v-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_v_form, {\n      ref: \"form\",\n      \"validate-on\": \"submit\",\n      onSubmit: _withModifiers(_ctx.submit, [\"prevent\"])\n    }, {\n      default: _withCtx(() => [\n        _cache[11] || (_cache[11] = _createElementVNode(\"div\", null, [\n          _createElementVNode(\"h1\", { class: \"form-title\" }, \"Welcome!\"),\n          _createElementVNode(\"p\", { class: \"form-description\" }, \"Sign up to unlock the guides full potential.\")\n        ], -1)),\n        _createElementVNode(\"fieldset\", null, [\n          _cache[8] || (_cache[8] = _createElementVNode(\"legend\", {\n            class: \"sr-only\",\n            \"aria-label\": \"Sign Up Form\"\n          }, \"Sign Up Form\", -1)),\n          _createVNode(_component_v_text_field, {\n            modelValue: _ctx.firstName,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((_ctx.firstName) = $event)),\n            label: \"First Name\",\n            type: \"text\",\n            rules: _ctx.firstNameRules,\n            \"auto-complete\": \"given-name\",\n            \"aria-label\": \"First Name\",\n            \"aria-required\": \"true\",\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"]),\n          _createVNode(_component_v_text_field, {\n            modelValue: _ctx.lastName,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((_ctx.lastName) = $event)),\n            label: \"Last Name\",\n            type: \"text\",\n            rules: _ctx.lastNameRules,\n            \"auto-complete\": \"family-name\",\n            \"aria-label\": \"Last Name\",\n            \"aria-required\": \"true\",\n            required: \"\"\n          }, null, 8, [\"modelValue\", \"rules\"]),\n          _createVNode(_component_v_select, {\n            modelValue: _ctx.selectedCountry,\n            \"onUpdate:modelValue\": [\n              _cache[2] || (_cache[2] = ($event: any) => ((_ctx.selectedCountry) = $event)),\n              _cache[3] || (_cache[3] = ($event: any) => (_ctx.fetchStates(_ctx.selectedCountry)))\n            ],\n            items: _ctx.countries,\n            label: \"Country\",\n            clearable: \"\",\n            required: \"\",\n            rules: _ctx.countryRules,\n            \"aria-label\": \"Country\",\n            \"aria-required\": \"true\"\n          }, null, 8, [\"modelValue\", \"items\", \"rules\"]),\n          _createVNode(_component_v_select, {\n            modelValue: _ctx.selectedState,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((_ctx.selectedState) = $event)),\n            items: _ctx.states,\n            label: \"State\",\n            clearable: \"\",\n            required: \"\",\n            rules: _ctx.stateRules,\n            disabled: !_ctx.selectedCountry,\n            \"aria-label\": \"State\",\n            \"aria-required\": \"true\"\n          }, null, 8, [\"modelValue\", \"items\", \"rules\", \"disabled\"]),\n          _createVNode(_component_v_text_field, {\n            modelValue: _ctx.email,\n            \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((_ctx.email) = $event)),\n            label: \"Email\",\n            type: \"email\",\n            rules: _ctx.emailRules,\n            required: \"\",\n            \"aria-label\": \"Email\",\n            \"aria-required\": \"true\",\n            autocomplete: \"email\"\n          }, null, 8, [\"modelValue\", \"rules\"]),\n          _createVNode(_component_v_text_field, {\n            modelValue: _ctx.password,\n            \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((_ctx.password) = $event)),\n            label: \"Password\",\n            type: \"password\",\n            rules: _ctx.passwordRules,\n            required: \"\",\n            \"aria-label\": \"Password\",\n            \"aria-required\": \"true\"\n          }, null, 8, [\"modelValue\", \"rules\"]),\n          _createVNode(_component_v_text_field, {\n            modelValue: _ctx.confirmPassword,\n            \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((_ctx.confirmPassword) = $event)),\n            label: \"Confirm Password\",\n            type: \"password\",\n            rules: _ctx.confirmPasswordRules,\n            required: \"\",\n            \"aria-label\": \"Confirm Password\",\n            \"aria-required\": \"true\"\n          }, null, 8, [\"modelValue\", \"rules\"])\n        ]),\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createVNode(_component_v_btn, {\n            class: \"clear-button\",\n            onClick: _ctx.clear,\n            flat: \"\"\n          }, {\n            default: _withCtx(() => _cache[9] || (_cache[9] = [\n              _createTextVNode(\"Clear\")\n            ])),\n            _: 1\n          }, 8, [\"onClick\"]),\n          _createVNode(_component_v_btn, {\n            class: \"submit-button\",\n            onClick: _ctx.submit,\n            flat: \"\"\n          }, {\n            default: _withCtx(() => _cache[10] || (_cache[10] = [\n              _createTextVNode(\"Sign Up\")\n            ])),\n            _: 1\n          }, 8, [\"onClick\"])\n        ])\n      ]),\n      _: 1\n    }, 8, [\"onSubmit\"]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createVNode(_component_v_icon, { \"aria-hidden\": \"true\" }, {\n        default: _withCtx(() => _cache[12] || (_cache[12] = [\n          _createTextVNode(\"mdi-account-circle\")\n        ])),\n        _: 1\n      }),\n      _cache[14] || (_cache[14] = _createElementVNode(\"p\", { id: \"login-prompt\" }, \"Already have an account?\", -1)),\n      _createVNode(_component_v_btn, {\n        flat: \"\",\n        onClick: _ctx.toggleCurrentForm,\n        \"aria-labelledby\": \"login-prompt\"\n      }, {\n        default: _withCtx(() => _cache[13] || (_cache[13] = [\n          _createTextVNode(\"Log In\")\n        ])),\n        _: 1\n      }, 8, [\"onClick\"])\n    ])\n  ]))\n}","<template>\r\n    <div class=\"form-wrapper\">\r\n\r\n        <!-- Form -->\r\n        <v-form\r\n            ref=\"form\"\r\n            validate-on=\"submit\"\r\n            @submit.prevent=\"submit\"\r\n        >\r\n\r\n            <div>\r\n                <h1 class=\"form-title\">Welcome!</h1>\r\n                <p class=\"form-description\">Sign up to unlock the guides full potential.</p>\r\n            </div>\r\n\r\n            <fieldset>\r\n\r\n                <legend class=\"sr-only\" aria-label=\"Sign Up Form\">Sign Up Form</legend>\r\n\r\n                <!-- First Name -->\r\n                <v-text-field\r\n                    v-model=\"firstName\"\r\n                    label=\"First Name\"\r\n                    type=\"text\"\r\n                    :rules=\"firstNameRules\"\r\n                    auto-complete=\"given-name\"\r\n                    aria-label=\"First Name\"\r\n                    aria-required=\"true\"\r\n                    required\r\n                />\r\n\r\n                <!-- Last Name -->\r\n                <v-text-field\r\n                    v-model=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    type=\"text\"\r\n                    :rules=\"lastNameRules\"\r\n                    auto-complete=\"family-name\"\r\n                    aria-label=\"Last Name\"\r\n                    aria-required=\"true\"\r\n                    required\r\n                />\r\n\r\n                <!-- Country (Searchable) -->\r\n                <v-select\r\n                    v-model=\"selectedCountry\"\r\n                    :items=\"countries\"\r\n                    label=\"Country\"\r\n                    clearable\r\n                    required\r\n                    :rules=\"countryRules\"\r\n                    @update:modelValue=\"fetchStates(selectedCountry)\"\r\n                    aria-label=\"Country\"\r\n                    aria-required=\"true\"\r\n                />\r\n\r\n                <!-- State (Depends on Selected Country) -->\r\n                <v-select\r\n                    v-model=\"selectedState\"\r\n                    :items=\"states\"\r\n                    label=\"State\"\r\n                    clearable\r\n                    required\r\n                    :rules=\"stateRules\"\r\n                    :disabled=\"!selectedCountry\"\r\n                    aria-label=\"State\"\r\n                    aria-required=\"true\"\r\n                />\r\n\r\n                <!-- Email -->\r\n                <v-text-field\r\n                    v-model=\"email\"\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    :rules=\"emailRules\"\r\n                    required\r\n                    aria-label=\"Email\"\r\n                    aria-required=\"true\"\r\n                    autocomplete=\"email\"\r\n                />\r\n\r\n                <!-- Password -->\r\n                <v-text-field\r\n                    v-model=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    :rules=\"passwordRules\"\r\n                    required\r\n                    aria-label=\"Password\"\r\n                    aria-required=\"true\"\r\n                />\r\n\r\n                <!-- Confirm Password -->\r\n                <v-text-field\r\n                    v-model=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    :rules=\"confirmPasswordRules\"\r\n                    required\r\n                    aria-label=\"Confirm Password\"\r\n                    aria-required=\"true\"\r\n                />\r\n\r\n            </fieldset>\r\n\r\n            <div class=\"form-buttons\">\r\n                <!-- Clear Button -->\r\n                <v-btn class=\"clear-button\" @click=\"clear\" flat>Clear</v-btn>\r\n                <!-- Submit Button -->\r\n                <v-btn class=\"submit-button\" @click=\"submit\" flat>Sign Up</v-btn>\r\n            </div>\r\n\r\n        </v-form>\r\n\r\n        <!-- Form Filler -->\r\n        <div class=\"form-filler\">\r\n            <v-icon aria-hidden=\"true\">mdi-account-circle</v-icon>\r\n            <p id=\"login-prompt\">Already have an account?</p>\r\n            <v-btn flat @click=\"toggleCurrentForm\" aria-labelledby=\"login-prompt\">Log In</v-btn>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { defineComponent } from \"vue\";\r\n    import { Server } from '@/config/Server';\r\n    import { storeToRefs } from 'pinia';\r\n    import { useSessionStore } from '@/stores/session';\r\n    import { useNavigation } from '@/composables/useNavigation';\r\n    import { useSnackbarStore } from '@/stores/showSnackbar';\r\n\r\n    export default defineComponent({\r\n        name: 'SignUpForm',\r\n\r\n        setup() {\r\n            const sessionStore = useSessionStore();\r\n            const { getUser: user } = storeToRefs(sessionStore);\r\n            const { goTo } = useNavigation();\r\n            const snackbar = useSnackbarStore();\r\n\r\n            return { user, sessionStore, goTo, snackbar };\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                countries: [] as string[],\r\n                states: [] as string[],\r\n                selectedCountry: 'Australia',\r\n                selectedState: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n\r\n                firstNameRules: [\r\n                    (value: string) => {\r\n                        return (value && value.trim().length > 0) || \"First name is required\";\r\n                    },\r\n                    (value: string) => {\r\n                        return (value && value.trim().length <= 50) || \"First name must be 50 characters or less\";\r\n                    },\r\n                    (value: string) => {\r\n                        return /^[a-zA-Z\\s]*$/.test(value) || \"First name must contain only letters and spaces\";\r\n                    }\r\n                ],\r\n\r\n                lastNameRules: [\r\n                    (value: string) => {\r\n                        return (value && value.trim().length > 0) || \"Last name is required\";\r\n                    },\r\n                    (value: string) => {\r\n                        return (value && value.trim().length <= 50) || \"Last name must be 50 characters or less\";\r\n                    },\r\n                    (value: string) => {\r\n                        return /^[a-zA-Z\\s]*$/.test(value) || \"Last name must contain only letters and spaces\";\r\n                    },\r\n                ],\r\n\r\n                countryRules: [\r\n                    (value: string) => {\r\n                        return (value && value.trim().length > 0) || \"Country is required\";\r\n                    }\r\n                ],\r\n\r\n                stateRules: [\r\n                    (value: string) => {\r\n                        return (value && value.trim().length > 0) || \"State is required\";\r\n                    }\r\n                ],\r\n\r\n                emailRules: [\r\n                    (value: string) => {\r\n                        return (value && value.trim().length > 0) || \"Email is required\";\r\n                    },\r\n                    (value: string) => {\r\n                        return /.+@.+\\..+/.test(value) || \"Email must be valid\";\r\n                    }\r\n                ],\r\n\r\n                passwordRules: [\r\n                    (value: string) => {\r\n                        return (value && value.trim().length > 0) || \"Password is required\";\r\n                    },\r\n                    (value: string) => {\r\n                        return (value && value.trim().length >= 8) || \"Password must be at least 8 characters\";\r\n                    }\r\n                ],\r\n\r\n                confirmPasswordRules: [\r\n                    (value: string) => {\r\n                        return (value && value.trim().length > 0) || \"Confirm password is required\";\r\n                    },\r\n                    () => {\r\n                        return (this.doesConfirmPasswordMatch()) || \"Passwords do not match\";\r\n                    }\r\n                ]\r\n\r\n\r\n            };\r\n        },\r\n\r\n        methods: {\r\n\r\n            // Toggle between login and signup forms\r\n            toggleCurrentForm() {\r\n                this.$emit('toggleCurrentForm');\r\n            },\r\n\r\n            // Fetch all countries on mount\r\n            async fetchCountries() {\r\n                try {\r\n                    const response = await fetch(\"https://restcountries.com/v3.1/all?fields=name\");\r\n                    const data = await response.json();\r\n\r\n                    if (response.ok) {\r\n                        this.countries = data.map((country: any) => country.name.common).sort();\r\n                    } else {\r\n                        throw new Error(\"Failed to fetch countries\");\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error(\"Error fetching countries:\", error);\r\n                }\r\n            },\r\n\r\n            // Fetch states for a specific country\r\n            async fetchStates(country: string) {\r\n\r\n                // Set data to empty while loading states.\r\n                this.states = [];\r\n                if (country != 'Australia') this.selectedState = '';\r\n\r\n                // If no country is selected, return.\r\n                if (!country) return;\r\n\r\n                try {\r\n                    const response = await fetch(\"https://countriesnow.space/api/v0.1/countries/states\", {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({ \"country\": country })\r\n                    });\r\n\r\n                    const data = await response.json();\r\n\r\n                    if (response.ok) {\r\n                        this.states = data.data.states.map((state: any) => state.name).sort();\r\n                        if (country === 'Australia') this.selectedState = 'Victoria';\r\n                    } else {\r\n                        throw new Error(\"Failed to fetch states\");\r\n                    }\r\n\r\n                } catch (error) {\r\n                    console.error(`Error fetching states for ${country}:`, error);\r\n                    this.states = [];\r\n                }\r\n            },\r\n\r\n            // Clear the form\r\n            clear() {\r\n                this.firstName = '';\r\n                this.lastName = '';\r\n                this.selectedCountry = '',\r\n                this.selectedState = '',\r\n                this.email = '';\r\n                this.password = '';\r\n                this.confirmPassword = '';\r\n            },\r\n\r\n            // Submit the form\r\n            async submit(event: Event): Promise<void> {\r\n                event.preventDefault();\r\n\r\n                const { valid } = await (this.$refs.form as any).validate();\r\n\r\n                if (!valid) {\r\n                    return;\r\n                }\r\n\r\n                const apiUrl = `${Server}/post/signup`;\r\n                const payload = {\r\n                    firstName: this.firstName,\r\n                    lastName: this.lastName,\r\n                    email: this.email,\r\n                    password: this.password,\r\n                    country: this.selectedCountry,\r\n                    state: this.selectedState\r\n                };\r\n\r\n                try {\r\n                    const response = await fetch(apiUrl, {\r\n                        method: \"POST\",\r\n                        headers: { \"Content-Type\": \"application/json\" },\r\n                        body: JSON.stringify(payload),\r\n                    });\r\n\r\n                    if (response.status === 200) {\r\n                        const data = await response.json();\r\n                        this.sessionStore.login({\r\n                            userId: data.userId\r\n                        });\r\n                        this.snackbar.showSnackbar('Account created successfully!');\r\n                        this.goTo('home');\r\n\r\n                    } else {\r\n                        this.snackbar.showSnackbar('Failed to create account');\r\n                    }\r\n\r\n                } catch (error) {\r\n                    this.snackbar.showSnackbar('Failed to create account')\r\n                }\r\n            },\r\n\r\n            doesConfirmPasswordMatch(): boolean {\r\n                return this.password === this.confirmPassword;\r\n            }\r\n        },\r\n\r\n        // Fetch countries when the component is mounted\r\n        mounted() {\r\n            this.fetchCountries();\r\n            this.fetchStates(this.selectedCountry);\r\n            this.selectedState = 'Victoria';\r\n        }\r\n    });\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import { render } from \"./SignUpForm.vue?vue&type=template&id=31279f30&ts=true\"\nimport script from \"./SignUpForm.vue?vue&type=script&lang=ts\"\nexport * from \"./SignUpForm.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./LoginView.vue?vue&type=template&id=5e91bc85&ts=true\"\nimport script from \"./LoginView.vue?vue&type=script&lang=ts\"\nexport * from \"./LoginView.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { createForm, makeFormProps } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\n\n// Utilities\nimport { ref } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { SubmitEventPromise } from '@/composables/form'\n\nexport const makeVFormProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeFormProps(),\n}, 'VForm')\n\ntype VFormSlots = {\n  default: ReturnType<typeof createForm>\n}\n\nexport const VForm = genericComponent<VFormSlots>()({\n  name: 'VForm',\n\n  props: makeVFormProps(),\n\n  emits: {\n    'update:modelValue': (val: boolean | null) => true,\n    submit: (e: SubmitEventPromise) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const form = createForm(props)\n    const formRef = ref<HTMLFormElement>()\n\n    function onReset (e: Event) {\n      e.preventDefault()\n      form.reset()\n    }\n\n    function onSubmit (_e: Event) {\n      const e = _e as SubmitEventPromise\n\n      const ready = form.validate()\n      e.then = ready.then.bind(ready)\n      e.catch = ready.catch.bind(ready)\n      e.finally = ready.finally.bind(ready)\n\n      emit('submit', e)\n\n      if (!e.defaultPrevented) {\n        ready.then(({ valid }) => {\n          if (valid) {\n            formRef.value?.submit()\n          }\n        })\n      }\n\n      e.preventDefault()\n    }\n\n    useRender(() => ((\n      <form\n        ref={ formRef }\n        class={[\n          'v-form',\n          props.class,\n        ]}\n        style={ props.style }\n        novalidate\n        onReset={ onReset }\n        onSubmit={ onSubmit }\n      >\n        { slots.default?.(form) }\n      </form>\n    )))\n\n    return forwardRefs(form, formRef)\n  },\n})\n\nexport type VForm = InstanceType<typeof VForm>\n"],"names":["render","_ctx","_cache","$props","$setup","$data","$options","_component_LoginForm","_resolveComponent","_component_SignUpForm","_openBlock","_createBlock","_component_v_container","default","_withCtx","currentForm","key","onToggleCurrentForm","toggleCurrentForm","_","_hoisted_1","class","_hoisted_2","_hoisted_3","_createElementBlock","_createElementVNode","_createVNode","_component_v_icon","_createTextVNode","id","_component_v_btn","flat","onClick","_component_v_form","onSubmit","_withModifiers","submitForm","_component_v_text_field","modelValue","email","$event","label","type","required","autocomplete","password","clearForm","defineComponent","name","setup","sessionStore","useSessionStore","getUser","user","storeToRefs","goTo","useNavigation","snackbar","useSnackbarStore","data","methods","this","response","fetch","Server","status","json","login","userId","UserID","showSnackbar","error","$emit","__exports__","ref","submit","firstName","rules","firstNameRules","lastName","lastNameRules","_component_v_select","selectedCountry","fetchStates","items","countries","clearable","countryRules","selectedState","states","stateRules","disabled","emailRules","passwordRules","confirmPassword","confirmPasswordRules","clear","value","trim","length","test","doesConfirmPasswordMatch","fetchCountries","ok","Error","map","country","common","sort","console","method","headers","body","JSON","stringify","state","event","preventDefault","valid","$refs","form","validate","apiUrl","payload","mounted","components","LoginForm","SignUpForm","handleLogin","handleLogout","logout","makeVFormProps","propsFactory","makeComponentProps","makeFormProps","VForm","genericComponent","props","emits","val","e","_ref","slots","emit","createForm","formRef","onReset","reset","_e","ready","then","bind","catch","finally","defaultPrevented","_ref2","useRender","style","forwardRefs"],"sourceRoot":""}
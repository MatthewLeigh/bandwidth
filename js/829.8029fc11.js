"use strict";(self["webpackChunkbandwidth_v3"]=self["webpackChunkbandwidth_v3"]||[]).push([[829],{2829:function(e,t,a){a.r(t),a.d(t,{default:function(){return f}});var i=a(6768),n=a(3813),s=a(9669);const o={class:"page-title"},l={class:"hero-image-wrapper"},r=["src"],h=["src"];function d(e,t,d,c,u,p){const m=(0,i.g2)("DividerBar"),b=(0,i.g2)("RandomBanner");return(0,i.uX)(),(0,i.Wv)(n.I,null,{default:(0,i.k6)((()=>[(0,i.Lk)("div",o,[(0,i.Lk)("div",l,[t[0]||(t[0]=(0,i.Lk)("div",{class:"hero-image-text"},[(0,i.Lk)("h1",null,"About Section")],-1)),(0,i.Lk)("img",{class:"hero-image",src:a(7448),alt:"Events Hero"},null,8,r)]),t[1]||(t[1]=(0,i.Lk)("div",{class:"hero-subtext"},[(0,i.Lk)("p",null," This website was created as a custom project by Matthew Cross for the Swinburne University of Technology Online Course - COS30043 Interface Design and Development. This page will provide an overview of the project, the technologies used, how the project meets the unit criteria, and what the next steps for the project are. ")],-1))]),(0,i.Lk)("article",null,[(0,i.bF)(m,{text:"Overview",class:"divider-bar"}),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-hexagon-multiple"}),t[2]||(t[2]=(0,i.Lk)("span",null,"Introduction",-1))]),t[3]||(t[3]=(0,i.Lk)("p",null," This is a project that I have been thinking about for a while now, and I am very glad that I was able to work on it as part of this unit. Bandwidth is a gig guide for the Melbourne music scene that will provide a complete list of upcoming events, venues, and artists in Melbourne. This initial version of the website is a proof of concept more than anything, showing the potential of the idea and what it could become with more time and resources. ",-1)),t[4]||(t[4]=(0,i.Lk)("p",null," The website is built using Vue 3 and the Vuetify Material Design Framework. The website is hosted on GitHub Pages, while the server and sqlite database are hosted on Render. The website is a single page application that uses the Vue Router to navigate between different views. The website is fully responsive and supports mobile, tablet, and desktop devices. The website supports filtering and searching for events, venues, and artists. User's can create an account and login to save their favourite events, venues, and artists. Additionally, users can create, update, delete, and like comments on any event, venue, or artist once they are logged in. ",-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-vector-link"}),t[5]||(t[5]=(0,i.Lk)("span",null,"Links",-1))]),t[6]||(t[6]=(0,i.Lk)("p",null," The following links will take you to Lucidchart and Canva where you can view the Entity Relationship Diagram and the Mobile and Desktop Design Prototypes for the website. Please note that these links will open in a new tab. ",-1)),t[7]||(t[7]=(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,[(0,i.Lk)("a",{class:"clickable",target:"_blank",href:"https://lucid.app/lucidchart/ef106a66-2b21-4603-b0e8-a0b71c9e5a8b/edit?invitationId=inv_84152621-20af-4d14-9ab8-9f0afbfa1df9&page=0_0#"},"ERD")]),(0,i.Lk)("li",null,[(0,i.Lk)("a",{class:"clickable",target:"_blank",href:"https://www.canva.com/design/DAGZTNcubuY/R9hzY4d9h-509wLeaN4RMA/edit?utm_content=DAGZTNcubuY&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton"},"Mobile Design Prototype")]),(0,i.Lk)("li",null,[(0,i.Lk)("a",{class:"clickable",target:"_blank",href:"https://www.canva.com/design/DAGZbU7cMz0/K4GXh9dyRNEHzH6VxZi8CA/edit?utm_content=DAGZbU7cMz0&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton "},"Desktop Design Prototype")])],-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-format-list-bulleted-type"}),t[8]||(t[8]=(0,i.Lk)("span",null,"What is a Focus?",-1))]),t[9]||(t[9]=(0,i.Lk)("p",null," You'll see the idea of a Focus everywhere in the code for this website, so it is important to understand what a Focus is. A Focus is a way of grouping together a type of entity - an event, venue, or artist - and the corresponding ID for that entity. This is used to create a consistent way of interacting with the entities in the database, and to make it easier to create reusable components that can be used across different parts of the website. For example, the FocusCard component is a single component that can be used to will display different types of information based on the Focus Type that it is given. This makes it easier to create reusable components that can be used across different parts of the website, and to create a consistent way of interacting with the entities in the database. ",-1))])]),(0,i.Lk)("article",null,[(0,i.bF)(m,{text:"6.2 Distinction Criteria",class:"divider-bar"}),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[10]||(t[10]=(0,i.Lk)("span",null,"Context View Grouping",-1))]),t[11]||(t[11]=(0,i.Lk)("h3",null," Demonstrate the use of context view grouping - implement the web application with a structure of row-column grid system. ",-1)),t[12]||(t[12]=(0,i.Lk)("p",null," This website is fully responsive and supports mobile, tablet, and desktop devices. In places where they offer great sizing functionality out of the box, I have used Vuetify components to create this dynamic layout. The most prominent example of this the v-container which neatly wraps all main views and adjusts the padding and margins based on the device size. This is a great example of context view grouping as it groups all the main views together and adjusts the layout based on the device size. ",-1)),t[13]||(t[13]=(0,i.Lk)("p",null,[(0,i.eW)(" For each view and component, I have created dynamic layouts that adjust the size, position, padding and visibility based on the device size. I won't point you towards a specific example here, but rather I encourage you to resize the browser (or open "),(0,i.Lk)("a",{target:"_blank",href:"https://matthewleigh.github.io/bandwidth/"},"Bandwidth"),(0,i.eW)(" on your phone) and see how the layout changes based on the device size. ")],-1)),t[14]||(t[14]=(0,i.Lk)("p",null,[(0,i.eW)(" The specific requirement for this criteria was to make use of the row-column grid system. This is a core feature of Vuetify that offers a simplistic way of dynamically adjusting layouts to the screen size. To be honest with you, I hate the row-column grid system. I find it very limiting and frustrating to work with. I find that it significantly bloats the markup for each template, while simultaneously limiting the flexibility by forcing you to use a specific number of columns. I have made use of the row-column grid system in the "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/blob/main/frontend/src/components/AppFooter.vue"},"footer"),(0,i.eW)(" component of the website, and sprinkled it in here-and-there where it made sense, but I have tended to avoid it in most places. ")],-1)),t[15]||(t[15]=(0,i.Lk)("p",null,[(0,i.eW)(" Instead, I have demonstrated the use of context view grouping by creating dynamic layouts using flexbox and CSS grid. This has allowed me to create more flexible and responsive layouts that adjust based on the device size. I have used media queries to adjust the layout based on the device size, and have created layouts that are mobile-first. This approach has allowed me to create a website that is fully responsive and supports mobile, tablet, and desktop devices. I encourage you to check out the "),(0,i.Lk)("a",{target:"_blank",href:"https://matthewleigh.github.io/bandwidth/event/3"},"Psychedelic Jam"),(0,i.eW)(" event, which is a great example of a dynamic layout that adjusts based on the device size. ")],-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[16]||(t[16]=(0,i.Lk)("span",null,"Modules",-1))]),t[17]||(t[17]=(0,i.Lk)("h3",null," Demonstrate the use of modules - implement the web application with a number of controllers and config. (Maybe even custom directives and filters - optional but nice) ",-1)),t[18]||(t[18]=(0,i.Lk)("p",null,[(0,i.eW)(" This website was made with Vue 3, and takes advantage of modules in the form of its "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/tree/main/frontend/src/components"},"23 Components"),(0,i.eW)(" and "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/tree/main/frontend/src/views"},"10 Views"),(0,i.eW)(". Each component and view is a module that encapsulates a specific piece of functionality, such as a header, footer, event list, or event details. This modular approach makes the codebase easier to manage and maintain, as each module is self-contained and can be reused across different parts of the website. ")],-1)),t[19]||(t[19]=(0,i.Lk)("p",null,[(0,i.eW)(" Additionally, the website uses a number of controllers and config files to manage the application state and configuration. The "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/blob/main/frontend/src/stores/session.js"},"Session Store"),(0,i.eW)(" is used to manage the user's session and authentication state, while the "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/blob/main/frontend/src/stores/useSelectedDatesStore.ts"},"Selected Dates Store"),(0,i.eW)(" retains the selected dates for the event filter when the user navigates between different views. ")],-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[20]||(t[20]=(0,i.Lk)("span",null,"Arrays",-1))]),t[21]||(t[21]=(0,i.Lk)("h3",null,"Demonstrate the use of arrays",-1)),t[22]||(t[22]=(0,i.Lk)("p",null,[(0,i.eW)(" Arrays are used throughout the website to store and manage data. I think anyway website that can't demonstrate the use of arrays is going to be a pretty boring website. One of the most prominent examples of the use of arrays on the website is the "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/blob/main/frontend/src/components/FocusCardRow.vue"},"FocusCardRow Component"),(0,i.eW)(" which accepts an array of focus objects and displays them in a row. ")],-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[23]||(t[23]=(0,i.Lk)("span",null,"Prototyping and Design",-1))]),t[24]||(t[24]=(0,i.Lk)("h3",null," Demonstrate the mobile first design concept supporting mobile portrait, mobile landscape and desktop ",-1)),t[25]||(t[25]=(0,i.Lk)("p",null,[(0,i.eW)(" I am not a designer, as evidenced by the fact that I made the prototypes for this website in Canva. However, as a non-designer, I am very proud of the design of this website. I think it is clean, modern, and easy to use. The "),(0,i.Lk)("a",{target:"_blank",href:"https://www.canva.com/design/DAGZTNcubuY/R9hzY4d9h-509wLeaN4RMA/edit?utm_content=DAGZTNcubuY&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton"},"Mobile Design Prototype"),(0,i.eW)(" and "),(0,i.Lk)("a",{target:"_blank",href:"https://www.canva.com/design/DAGZbU7cMz0/K4GXh9dyRNEHzH6VxZi8CA/edit?utm_content=DAGZbU7cMz0&utm_campaign=designshare&utm_medium=link2&utm_source=sharebutton"},"Desktop Design Prototype"),(0,i.eW)(" can be seen at these links. ")],-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[26]||(t[26]=(0,i.Lk)("span",null,"Accessibility Support",-1))]),t[27]||(t[27]=(0,i.Lk)("h3",null,"Demonstrate accessibility support more specifically on input forms and tables",-1)),t[28]||(t[28]=(0,i.Lk)("p",null," Accessibility support in forms helps to ensure that users with disabilities or impairments are able to use the website with the help of assistive technologies. This includes screen readers, magnifiers, and voice recognition software. The website has been designed with accessibility in mind, and all input forms and tables are usable and accessible. This includes the use of labels, placeholders, and aria attributes to help users navigate the website using assistive technologies. ",-1)),t[29]||(t[29]=(0,i.Lk)("p",null,[(0,i.eW)(" Below is a screenshot of the WAVE Web Accessibility Evaluation Tool showing the accessibility of the "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/blob/main/frontend/src/components/LoginForm.vue"},"Login Form"),(0,i.eW)(" on the website. The form has been designed with accessibility in mind, and all input fields have labels, placeholders, and aria attributes to help users navigate the form using assistive technologies. Additionally, forms on the website are crated using Vuetify components, which are designed to be accessible out of the box. ")],-1)),(0,i.Lk)("img",{src:a(7853),alt:"Login Form WAVE Check"},null,8,h)]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[30]||(t[30]=(0,i.Lk)("span",null,"HTML 5 Coding Conventions",-1))]),t[31]||(t[31]=(0,i.Lk)("h3",null,"Demonstrate appropriate use HTML 5 coding conventions - case, indentation",-1)),t[32]||(t[32]=(0,i.Lk)("p",null,[(0,i.eW)(" The website is built using Vue 3, which generates HTML 5 compliant code out of the box. The HTML code is correctly indented, with meaningful names assigned to all model identifiers. The code is commented to help the reader understand the abstractions and how they work. Additionally, the JavaScript code adheres to JSLint rules, which helps to ensure that the code is clean, readable, and maintainable. Please check out any files in the "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/tree/main/frontend"},"Frontend Repository"),(0,i.eW)(" to verify this. ")],-1))])]),(0,i.Lk)("article",null,[(0,i.bF)(m,{text:"6.3 High Distinction Criteria",class:"divider-bar"}),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[33]||(t[33]=(0,i.Lk)("span",null,"Reasonable Complexity",-1))]),t[34]||(t[34]=(0,i.Lk)("h3",null,"Ability to design and implement a web application of reasonable complexity.",-1)),t[35]||(t[35]=(0,i.Lk)("ul",null,[(0,i.Lk)("li",null," Web application does more than have the user respond to random data (e.g. number guessing game), or simply manipulate data (e.g. calculator, units and units2). "),(0,i.Lk)("li",null," The web application must demonstrate the need to think about its view structure, model and module implementation. ")],-1)),t[36]||(t[36]=(0,i.Lk)("p",null," I would hope that this website pretty clearly demonstrates the ability to design and implement a web application of reasonable complexity. ",-1)),t[37]||(t[37]=(0,i.Lk)("p",null," The website is a single page application that uses the Vue Router to navigate between different views. The website supports filtering and searching for events, venues, and artists. User's can create an account and login to save their favourite events, venues, and artists, as well as comment on each of these. Data is stored in a sqlite database and accessed via a REST API. The website is fully responsive and supports mobile, tablet, and desktop devices. The website is hosted on GitHub Pages, while the server and database are hosted on Render. Advanced Vuetify components such as the v-calander and navigation drawer are used to create a modern and engaging user experience. Finally, the website uses a number of features not covered in this unit, such as state management and TypeScript data models to manage the application state and data. ",-1)),t[38]||(t[38]=(0,i.Lk)("p",null,[(0,i.eW)(" Please also see the reasonably complex "),(0,i.Lk)("a",{target:"_blank",href:"https://lucid.app/lucidchart/ef106a66-2b21-4603-b0e8-a0b71c9e5a8b/edit?invitationId=inv_84152621-20af-4d14-9ab8-9f0afbfa1df9&page=0_0#"},"Entity Relationship Diagram"),(0,i.eW)(" for the database schema. ")],-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[39]||(t[39]=(0,i.Lk)("span",null,"Effective Use of Decomposition",-1))]),t[40]||(t[40]=(0,i.Lk)("ul",null,[(0,i.Lk)("li",null," The web application consists of custom filter, custom directive, and config with little code duplication. ")],-1)),t[41]||(t[41]=(0,i.Lk)("p",null," The website is built using Vue 3, which allows for the creation of custom filters, directives, and config files. Most of the data used in the website is stored in a SQLite database and accessed via a REST API. The website uses a number of custom filters to format the data, such as the date filter in the event search view, and the csv filter in the focus card component. Additionally, the website uses custom directives to manage the application state, such as the v-focus directive in the event search view. Finally, the website uses a number of config files to manage the application configuration, such as the vuetify config file in the main.js file. ",-1)),t[42]||(t[42]=(0,i.Lk)("ul",null,[(0,i.Lk)("li",null," Data from external sources or data APIs is used intelligently to minimise the amount of code required. ")],-1)),t[43]||(t[43]=(0,i.Lk)("p",null,[(0,i.eW)(" This website is built to serve the Melbourne music scene, but I wanted to make it accessible to people visiting Melbourne as well by letting them specify their home Country and State in the "),(0,i.Lk)("a",{target:"_blank",href:"https://github.com/MatthewLeigh/bandwidth/blob/main/frontend/src/components/SignUpForm.vue"},"Sign Up Form"),(0,i.eW)(". However, I didn't want to have to manually enter every country and state in the world into the database. Instead, I used the "),(0,i.Lk)("a",{target:"_blank",href:"https://restcountries.com/"},"Rest Countries API"),(0,i.eW)(" to get a list of all countries and their states. This allowed me to minimise the amount of code required to create the sign up form, and also made it easier to maintain the website in the future. ")],-1)),t[44]||(t[44]=(0,i.Lk)("p",null,[(0,i.eW)(" Similarly, I used the "),(0,i.Lk)("a",{target:"_blank",href:"https://countriesnow.space"},"Countries Now"),(0,i.eW)(" API to get a list of all states for the selected country. ")],-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[45]||(t[45]=(0,i.Lk)("span",null,"Effective Use of Structure Design",-1))]),t[46]||(t[46]=(0,i.Lk)("ul",null,[(0,i.Lk)("li",null," HTML structure elements represent meaningful context grouping and row-column system that supports at least three device sizes. "),(0,i.Lk)("li",null," Input forms and tables are usable and accessible. ")],-1)),t[47]||(t[47]=(0,i.Lk)("p",null," Please see above sections where I have provided detailed justifications for each of these criteria. ",-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-check"}),t[48]||(t[48]=(0,i.Lk)("span",null,"Use of Good Programming Practices",-1))]),t[49]||(t[49]=(0,i.Lk)("ul",null,[(0,i.Lk)("li",null,"Code is correctly indented, with meaningful names assigned to all model identifiers"),(0,i.Lk)("li",null,"Code is commented to help the reader understand the abstractions and how they work."),(0,i.Lk)("li",null,"HTML code is HTML 5 compliant, JavaScript code adhere to JSLint rules.")],-1)),t[50]||(t[50]=(0,i.Lk)("p",null," Again, please see above sections where I have provided detailed justifications for each of these criteria. ",-1))])]),(0,i.Lk)("article",null,[(0,i.bF)(m,{text:"What's Next?",class:"divider-bar"}),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-badminton"}),t[51]||(t[51]=(0,i.Lk)("span",null,"Admin Site",-1))]),t[52]||(t[52]=(0,i.Lk)("p",null," The next stage of this project will be the development of a secondary admin website where events, artists, and venues can be added, updated, and deleted. My initial thoughts for this next stage was to develop web scrappers for each venue and have them add data to a temporary repository for editing / approval on an admin site, but research into similar sites has indicated that data cleaning can be a very involved process for this type of data, and that a more manual process might even prove more efficient. ",-1)),t[53]||(t[53]=(0,i.Lk)("p",null," Additionally, local venue sites are notoriously bad, and navigating each of them to find the relevant information would be a very time consuming process. I am currently considering the best way to get this admin site up and running. ",-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-security"}),t[54]||(t[54]=(0,i.Lk)("span",null,"Security",-1))]),t[55]||(t[55]=(0,i.Lk)("p",null," My APIs are currently open to the public, and I have not implemented any security measures to protect the data. I don't use JWS tokens, hash my passwords, or attempt to protect the data in any way. The next stage of this project will be to implement security measures to protect the data and the users of the website. I ignored this stage for the initial version of the website as I wanted to focus on the functionality and design of the website in the limited time that I had, but I am aware that this is a critical part of any website and will be a priority for the next stage of this project. ",-1))]),(0,i.Lk)("section",null,[(0,i.Lk)("h2",null,[(0,i.bF)(s.w,{icon:"mdi-pencil-ruler"}),t[56]||(t[56]=(0,i.Lk)("span",null,"Improved Design",-1))]),t[57]||(t[57]=(0,i.Lk)("p",null," I am very proud of the design of this website. I think it is clean, modern, and easy to use. However, I am also very aware that I am not an experienced designer, and there is a lot that could be done to improve the design of the website. I am taking on-campus classes at Swinburne this year and will be on the look out for a design student who would like to collaborate on this project. ",-1))])]),(0,i.bF)(b)])),_:1})}var c=a(6705),u=a(1510),p=(0,i.pM)({name:"AboutView",components:{RandomBanner:c.A,DividerBar:u.A}}),m=a(1241);const b=(0,m.A)(p,[["render",d]]);var f=b},7448:function(e,t,a){e.exports=a.p+"img/about-hero.e9e3d02f.png"},7853:function(e,t,a){e.exports=a.p+"img/login-form-wave-check.10e2c2c4.png"}}]);
//# sourceMappingURL=829.8029fc11.js.map